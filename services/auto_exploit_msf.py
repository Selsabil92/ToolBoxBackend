import sys
import json
from metasploit import run_exploits, get_open_ports, EXPLOIT_MAP

if __name__ == "__main__":
    if len(sys.argv) != 2:
        print(json.dumps({"error": "Usage: python3 auto_exploit_msf.py <ip>"}))
        sys.exit(1)

    target_ip = sys.argv[1]
    open_ports = get_open_ports(target_ip)

    results = {
        "ip": target_ip,
        "open_ports": open_ports,
        "exploits": []
    }

    for port in open_ports:
        exploit_info = EXPLOIT_MAP.get(port)
        if not exploit_info:
            results["exploits"].append({
                "port": port,
                "status": "Aucun exploit défini"
            })
            continue

        try:
            results["exploits"].append({
                "port": port,
                "exploit": exploit_info["exploit"],
                "payload": exploit_info.get("payload", ""),
                "cve": exploit_info.get("cve", ""),
                "status": "Déclenché"
            })
        except Exception as e:
            results["exploits"].append({
                "port": port,
                "status": f"Erreur : {str(e)}"
            })

    print(json.dumps(results))  # ← capté dans le backend Flask
