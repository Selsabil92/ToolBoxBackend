from flask import Blueprint, request, jsonify
from flask_jwt_extended import jwt_required
import subprocess
import os

exploit_bp = Blueprint('exploit', __name__)

@exploit_bp.route('/api/exploit/start', methods=['POST'])
@jwt_required()
def run_exploit():
    data = request.get_json()
    ip = data.get('ip')

    if not ip:
        return jsonify({'success': False, 'error': 'IP cible manquante'}), 400

    # ‚úÖ Correction : chemin vers services/auto_exploit_msf.py
    script_path = os.path.join('services', 'auto_exploit_msf.py')

    if not os.path.exists(script_path):
        return jsonify({'success': False, 'error': f'Script non trouv√© : {script_path}'}), 500

    try:
        # üîÅ Lancement du script avec IP cible
        result = subprocess.run(
            ['python3', script_path, ip],
            capture_output=True,
            text=True,
            timeout=120
        )

        return jsonify({
            'success': True,
            'message': 'Exploitation lanc√©e avec succ√®s.',
            'ip': ip,
            'output': result.stdout.strip(),
            'errors': result.stderr.strip()
        }), 200

    except subprocess.TimeoutExpired:
        return jsonify({'success': False, 'error': 'Temps d‚Äôex√©cution d√©pass√© (120s).'}), 504

    except Exception as e:
        return jsonify({'success': False, 'error': f'Erreur interne : {str(e)}'}), 500
